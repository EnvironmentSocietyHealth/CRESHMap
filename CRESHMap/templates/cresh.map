MAP
  NAME "CRESH Map"
  STATUS ON
  SIZE 600 600
  EXTENT {% for b in bbox %}{{ b }} {% endfor %}
  PROJECTION
      "init=epsg:4326"
  END

  SYMBOL
      TYPE ellipse
      FILLED true
      POINTS 20 20 END
      NAME "circle"
  END

  WEB
      IMAGEPATH "/tmp/"
      IMAGEURL "/ms_tmp/"
      METADATA
          "wms_title"          "CRESHMap Server"
          "wms_abstract"       "map server for https://cresh.org.uk/ project"
          "wms_onlineresource" "{{ mapserverurl }}"
          "wms_srs"            "EPSG:4326 EPSG:4269 EPSG:3978 EPSG:3857"
          "wms_enable_request" "*"
          "wms_getfeatureinfo_formatlist" "text/plain,text/html,application/vnd.ogc.gml,gml,geojson"
      END
  END

  LAYER
      NAME "Quotes"
      METADATA
          "wms_title"         "Quotes"
          "wms_abstract"      "User quotes"
          "wms_srs"           "EPSG:4326"
          "gml_include_items" "all"
          "gml_featureid"     "ID"
          "gml_types"         "auto"
          "wfs_enable_request" "*"
      END
      TYPE POINT
      STATUS ON
      CONNECTIONTYPE POSTGIS
      CONNECTION "{% if dburl.host is not none %}host={{ dburl.host }} {% endif %}{% if dburl.username is not none %}user={{ dburl.username }} {% endif %}{% if dburl.password is not none %}password={{ dburl.password }} {% endif %}{% if dburl.port is not none %}port={{ dburl.port }} {% endif %}{% if dburl.database is not none %}dbname={{ dburl.database }}{% endif %}"

      DATA "geometry from (select g.gss_id, ST_Centroid(g.geometry) as geometry, g.name, STRING_AGG(q.value, '|') as value, count(*) as count from cresh_text_quotes q join cresh_geography g on q.gss_id = g.gss_id group by g.gss_id)
            as subquery using unique gss_id using srid=0"

      PROCESSING "CLOSE_CONNECTION=DEFER" # for maximum performance
      OFFSITE 0 0 0
      COMPOSITE
        OPACITY 70
      END

      CLASS
          NAME "Text Quotes"
	        GROUP "Quotes"
	        STYLE
              COLOR 220 220 220
              SYMBOL "circle"
	            #OUTLINECOLOR 199 199 199
	            OUTLINECOLOR 20 20 20
	        END
          LABEL
              TEXT "[count]"
	            COLOR 20 20 20
          END
      END
      TEMPLATE "quotes.js"
      PROJECTION #source
          "init=epsg:4326"
      END
  END

  {% for l in layers %}
  LAYER
      NAME "{{ l }}"
      METADATA
          "wms_title"         "{{ layers[l].name }}"
          "wms_abstract"      "{{ layers[l].abstract }}"
          "wms_srs"           "EPSG:4326"
          "gml_include_items" "all"
          "gml_featureid"     "ID"
          "gml_types"         "auto"
          "wfs_enable_request" "*"
      END
      TYPE POLYGON
      STATUS ON
      CONNECTIONTYPE POSTGIS
      #TODO:
      # * Add schemas
      CONNECTION "{% if dburl.host is not none %}host={{ dburl.host }} {% endif %}{% if dburl.username is not none %}user={{ dburl.username }} {% endif %}{% if dburl.password is not none %}password={{ dburl.password }} {% endif %}{% if dburl.port is not none %}port={{ dburl.port }} {% endif %}{% if dburl.database is not none %}dbname={{ dburl.database }}{% endif %}"
      DATA "geometry from (select g.gss_id, g.geometry, g.name,
            {% for a in attributes %} (select value from data where gss_id = g.gss_id and variable_id = '{{ attributes[a]['id'] }}' and year = {{ attributes[a]['year'] }}) as {{ a }},
            (select color from data where gss_id = g.gss_id and variable_id = '{{ attributes[a]['id'] }}' and year = {{ attributes[a]['year'] }}) as {{ a }}_color{% if not loop.last %}, {% endif %} {% endfor %}
            from cresh_geography g where g.gss_code = '{{ l }}')
            as subquery using unique gss_id using srid=0"


      PROCESSING "CLOSE_CONNECTION=DEFER" # for maximum performance
      OFFSITE 0 0 0
      COMPOSITE
        OPACITY 70
      END

      {% for a in attributes %}
      CLASS
          NAME "{{ attributes[a]['name'] }}"
	        GROUP "{{ a }}"
	        STYLE
              COLOR [{{ a }}_color]
	            OUTLINECOLOR 199 199 199
	        END
      END
      {% endfor %}
      TEMPLATE "{{ popup }}"
      PROJECTION #source
          "init=epsg:4326"
      END
  END
  {% endfor %}
END
